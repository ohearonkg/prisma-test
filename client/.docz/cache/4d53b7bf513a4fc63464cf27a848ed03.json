{"remainingRequest":"C:\\Users\\KG.OHearon\\Desktop\\prisma-test\\client\\node_modules\\babel-loader\\lib\\index.js?{\"presets\":[[\"@babel/preset-env\",{\"useBuiltIns\":\"usage\"}],\"@babel/preset-react\",[\"C:\\\\Users\\\\KG.OHearon\\\\Desktop\\\\prisma-test\\\\client\\\\node_modules\\\\babel-preset-docz\\\\dist\\\\index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"emotion\",\"@babel/plugin-syntax-dynamic-import\",[\"C:\\\\Users\\\\KG.OHearon\\\\Desktop\\\\prisma-test\\\\client\\\\node_modules\\\\docz-utils\\\\lib\\\\named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"C:\\\\Users\\\\KG.OHearon\\\\Desktop\\\\prisma-test\\\\client\\\\node_modules\\\\react-hot-loader\\\\babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!C:\\Users\\KG.OHearon\\Desktop\\prisma-test\\client\\src\\components\\CreateExerciseForm\\CreateExerciseForm.jsx","dependencies":[{"path":"C:\\Users\\KG.OHearon\\Desktop\\prisma-test\\client\\src\\components\\CreateExerciseForm\\CreateExerciseForm.jsx","mtime":1550554264056},{"path":"C:\\Users\\KG.OHearon\\Desktop\\prisma-test\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\KG.OHearon\\Desktop\\prisma-test\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es6.function.name\";\nvar _jsxFileName = \"C:\\\\Users\\\\KG.OHearon\\\\Desktop\\\\prisma-test\\\\client\\\\src\\\\components\\\\CreateExerciseForm\\\\CreateExerciseForm.jsx\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from \"react\";\nimport Button from \"../Button/Button\";\nimport CustomSelect from \"../CustomSelect/CustomSelect\";\nimport PropTypes from \"prop-types\";\nimport TextArea from \"../TextArea/TextArea\";\nimport TextInput from \"../TextInput/TextInput\";\n\nvar CreateExerciseForm = function CreateExerciseForm(_ref) {\n  var onSubmitFunction = _ref.onSubmitFunction,\n      exerciseTypeOptions = _ref.exerciseTypeOptions;\n\n  var _useState = useState({\n    type: exerciseTypeOptions[0],\n    name: \"\",\n    description: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      exerciseData = _useState2[0],\n      setExerciseData = _useState2[1];\n\n  var handleSumbit = function handleSumbit(event) {\n    event.preventDefault();\n    onSubmitFunction(_objectSpread({}, exerciseData));\n  };\n\n  var handleChange = function handleChange(name, value) {\n    switch (name) {\n      case \"name\":\n        setExerciseData(_objectSpread({}, exerciseData, {\n          name: value\n        }));\n        break;\n\n      case \"description\":\n        setExerciseData(_objectSpread({}, exerciseData, {\n          description: value\n        }));\n        break;\n\n      default:\n        setExerciseData(_objectSpread({}, exerciseData, {\n          type: value\n        }));\n    }\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSumbit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(CustomSelect, {\n    options: exerciseTypeOptions,\n    value: exerciseData.type,\n    onChangeFunction: function onChangeFunction(value) {\n      return handleChange(\"type\", value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(TextInput, {\n    placeholder: \"e.g. Bench Press\",\n    id: \"exerciseName\",\n    label: \"Exercise Name\",\n    value: exerciseData.name,\n    onChangeFunction: function onChangeFunction(value) {\n      return handleChange(\"name\", value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(TextArea, {\n    placeholder: \"Lay on a flat bench..\",\n    id: \"exerciseDescription\",\n    label: \"Exercise Description\",\n    value: exerciseData.description,\n    onChangeFunction: function onChangeFunction(value) {\n      return handleChange(\"description\", value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \" Create \"));\n};\n\nCreateExerciseForm.propTypes = {\n  exerciseTypeOptions: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onSubmitFunction: PropTypes.func.isRequired\n};\nvar _default = CreateExerciseForm;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(CreateExerciseForm, \"CreateExerciseForm\", \"C:\\\\Users\\\\KG.OHearon\\\\Desktop\\\\prisma-test\\\\client\\\\src\\\\components\\\\CreateExerciseForm\\\\CreateExerciseForm.jsx\");\n  reactHotLoader.register(_default, \"default\", \"C:\\\\Users\\\\KG.OHearon\\\\Desktop\\\\prisma-test\\\\client\\\\src\\\\components\\\\CreateExerciseForm\\\\CreateExerciseForm.jsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();\n\nCreateExerciseForm.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"CreateExerciseForm\",\n  \"props\": {\n    \"exerciseTypeOptions\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"string\"\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"onSubmitFunction\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["C:\\Users\\KG.OHearon\\Desktop\\prisma-test\\client\\src\\components\\CreateExerciseForm\\CreateExerciseForm.jsx"],"names":["React","useState","Button","CustomSelect","PropTypes","TextArea","TextInput","CreateExerciseForm","onSubmitFunction","exerciseTypeOptions","type","name","description","exerciseData","setExerciseData","handleSumbit","event","preventDefault","handleChange","value","propTypes","arrayOf","string","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport Button from \"../Button/Button\";\r\nimport CustomSelect from \"../CustomSelect/CustomSelect\";\r\nimport PropTypes from \"prop-types\";\r\nimport TextArea from \"../TextArea/TextArea\";\r\nimport TextInput from \"../TextInput/TextInput\";\r\n\r\nconst CreateExerciseForm = ({ onSubmitFunction, exerciseTypeOptions }) => {\r\n  const [exerciseData, setExerciseData] = useState({\r\n    type: exerciseTypeOptions[0],\r\n    name: \"\",\r\n    description: \"\"\r\n  });\r\n  const handleSumbit = event => {\r\n    event.preventDefault();\r\n    onSubmitFunction({ ...exerciseData });\r\n  };\r\n\r\n  const handleChange = (name, value) => {\r\n    switch (name) {\r\n      case \"name\":\r\n        setExerciseData({ ...exerciseData, name: value });\r\n        break;\r\n      case \"description\":\r\n        setExerciseData({ ...exerciseData, description: value });\r\n        break;\r\n      default:\r\n        setExerciseData({ ...exerciseData, type: value });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSumbit}>\r\n      <CustomSelect\r\n        options={exerciseTypeOptions}\r\n        value={exerciseData.type}\r\n        onChangeFunction={value => handleChange(\"type\", value)}\r\n      />\r\n      <TextInput\r\n        placeholder=\"e.g. Bench Press\"\r\n        id=\"exerciseName\"\r\n        label=\"Exercise Name\"\r\n        value={exerciseData.name}\r\n        onChangeFunction={value => handleChange(\"name\", value)}\r\n      />\r\n      <TextArea\r\n        placeholder=\"Lay on a flat bench..\"\r\n        id=\"exerciseDescription\"\r\n        label=\"Exercise Description\"\r\n        value={exerciseData.description}\r\n        onChangeFunction={value => handleChange(\"description\", value)}\r\n      />\r\n      <Button type=\"submit\"> Create </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nCreateExerciseForm.propTypes = {\r\n  exerciseTypeOptions: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onSubmitFunction: PropTypes.func.isRequired\r\n};\r\n\r\nexport default CreateExerciseForm;\r\n"]}]}